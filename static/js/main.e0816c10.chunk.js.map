{"version":3,"sources":["components/fbAuth/FirebaseProvider.js","components/images/zeroLogo.png","components/zero/NavBar.js","components/fbAuth/FirebaseConfig.js","modules/APICalls.js","components/images/hero1.jpg","components/zero/Header.js","components/zero/Home.js","components/fbAuth/Login.js","components/fbAuth/Register.js","components/zero/Pagination.js","components/zero/HowToCard.js","components/zero/ReduceLearn.js","components/zero/ReuseLearn.js","components/zero/RecycleLearn.js","components/zero/ReduceResourcesCard.js","components/zero/HouseHold.js","components/zero/Drink.js","components/zero/Secondhand.js","components/zero/Bulk.js","components/zero/FarmersMarketsCard.js","components/zero/FarmersMarkets.js","components/zero/BathPersonal.js","components/zero/ReduceResources.js","components/zero/Divert.js","components/zero/ReuseResources.js","components/zero/NashRecycleCard.js","components/zero/NashRecycleCenters.js","components/zero/RecycleResources.js","components/zero/ComposteLearn.js","components/zero/ComposteResources.js","components/zero/AddTrashButton.js","components/zero/BarChart.js","components/zero/Track.js","components/ApplicationViews.js","App.js","reportWebVitals.js","index.js"],"names":["FirebaseContext","createContext","FirebaseProvider","props","userProfile","sessionStorage","getItem","useState","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","provider","firebase","auth","GoogleAuthProvider","useEffect","onAuthStateChanged","u","Provider","value","login","email","pw","signInWithEmailAndPassword","then","setItem","JSON","stringify","user","logout","signOut","clear","register","password","createUserWithEmailAndPassword","savedUserProfile","console","log","signInWithGoogle","signInWithPopup","children","Spinner","className","NavBar","useContext","Navbar","collapseOnSelect","expand","sticky","Toggle","aria-controls","Brand","href","alt","src","taco","width","height","Collapse","id","Nav","NavDropdown","title","Item","Link","Button","variant","onClick","style","border","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dataURL","getResourceCategories","catId","fetch","response","json","parsedResponse","Object","keys","map","item","resourceId","values","entries","requests","Promise","all","getHowToCategories","howToId","Header","Container","fluid","Row","Col","skyline","Home","logo","event","window","location","Login","history","useHistory","setEmail","setPassword","md","Form","onSubmit","e","preventDefault","push","catch","alert","Group","controlId","Control","type","placeholder","onChange","target","to","block","Register","name","setName","confirmPassword","setConfirmPassword","Label","Text","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","number","HowToCard","howTo","verticalAlign","color","url","ListGroup","action","description","ReduceLearn","howToArray","setHowToArray","currentPage","setCurrentPage","data","newArray","key","index","indexOfLastPost","indexOfFirstPost","currentPosts","slice","length","pageNumber","ReuseLearn","CardDeck","RecycleLearn","ReduceResourcesCard","resource","phone","Household","resourceArray","setResourceArray","Drink","Secondhand","Bulk","FarmersMarketsCard","open","when","FarmersMarkets","getAllFarmersMarkets","BathPersonal","ReduceResources","Divert","ReuseResources","NashRecycleCard","website_url_more_information","facility_name","address","city","st","zip","NashRecycleCenters","getAllResources","RecycleResources","CompostLearn","CompostResources","AddTrashButton","getAllTrash","trashItem","trashObj","newItemObj","uid","currentUser","date","Date","now","method","headers","body","BarChart","newTrashArray","monthAndYearArray","trash","currentDate","month","getMonth","year","getFullYear","thisYear","janArray","filter","febArray","marArray","aprArray","mayArray","junArray","julArray","augArray","septArray","octArray","novArray","decArray","jan","feb","mar","apr","may","jun","jul","aug","sept","oct","nov","dec","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","Track","setNewTrashArray","fbid","ApplicationViews","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0816c10.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const FirebaseContext = createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const FirebaseProvider = (props) => {\n    const userProfile = sessionStorage.getItem(\"userProfile\");\n    const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\n\n    const [isFirebaseReady, setIsFirebaseReady] = useState(false);\n\n    const provider = new firebase.auth.GoogleAuthProvider();\n    //https://firebase.google.com/docs/auth/web/start?authuser=0\n\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((u) => {\n            setIsFirebaseReady(true);\n        });\n    }, []);\n\n    //setup other firebase logins\n\n\n    const login = (email, pw) => {\n        return firebase.auth().signInWithEmailAndPassword(email, pw)\n\n            .then((userProfile) => {\n                sessionStorage.setItem(\"userProfile\", JSON.stringify(userProfile.user));\n                setIsLoggedIn(true);\n            });\n    };\n\n    const logout = () => {\n        return firebase.auth().signOut()\n            .then(() => {\n                sessionStorage.clear()\n                setIsLoggedIn(false);\n            });\n    };\n\n    const register = (userProfile, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(userProfile.email, password)\n            .then(savedUserProfile => {\n                console.log('savedU', savedUserProfile)\n                sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n                setIsLoggedIn(true);\n            });\n    };\n\n\n    const signInWithGoogle = () => {\n        return firebase.auth().signInWithPopup(provider)\n            .then(savedUserProfile => {\n                console.log('savedU', savedUserProfile)\n                sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n                setIsLoggedIn(true);\n            })\n    }\n\n\n    /*\n      You return a context provider\n      allow any child elements to access them.\n  */\n\n    return (\n        <FirebaseContext.Provider value={{ isLoggedIn, login, logout, register, signInWithGoogle }}>\n            {isFirebaseReady\n                ? props.children\n                : <Spinner className=\"app-spinner dark\" />}\n        </FirebaseContext.Provider>\n    );\n}","export default __webpack_public_path__ + \"static/media/zeroLogo.733e04bb.png\";","import { React, useState, useContext } from 'react';\nimport { FirebaseContext } from \"../fbAuth/FirebaseProvider\";\nimport { Navbar, Nav, Button, NavDropdown } from 'react-bootstrap';\nimport taco from \"../images/zeroLogo.png\";\nimport { NavLink as RRNavLink } from \"react-router-dom\";\n\nexport const NavBar = () => {\n    const { isLoggedIn, logout } = useContext(FirebaseContext);\n\n\n    return (\n        <Navbar collapseOnSelect expand=\"md navbar-light bg-primary\" sticky=\"top\">\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Brand href=\"#/\"><img\n                alt=\"logo\"\n                src={taco}\n                width=\"50\"\n                height=\"35\"\n                className=\"d-inline-block align-top\"\n            /></Navbar.Brand>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <NavDropdown title=\"REDUCE\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Reduce-Learn\">Learn How</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Reduce-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"REUSE\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Reuse-Learn\">Learn How</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Reuse-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"RECYCLE\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Recycle-Learn\">Learn How</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Recycle-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"COMPOST\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Compost-Learn\">Learn How</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Compost-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"#/Track\">TRACK YOUR TRASH</Nav.Link>\n\n                    {isLoggedIn &&\n                        <>\n\n                            <Button className=\"nav-link text-right\" variant=\"link\" onClick={logout} style={{ border: \"0\" }}>LOGOUT</Button>\n\n                        </>\n\n                    }\n                    {!isLoggedIn &&\n                        <>\n\n                            <Nav.Link className=\"ml-auto\" href=\"#/login\">LOGIN</Nav.Link>\n\n                        </>\n                    }\n\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}","export const FirebaseConfig = {\n    apiKey: \"AIzaSyAyHR-TwECoh3QiKcIHtk1qQr4HZDaOsYI\",\n    authDomain: \"zero-965cc.firebaseapp.com\",\n    databaseURL: \"https://zero-965cc-default-rtdb.firebaseio.com\",\n    projectId: \"zero-965cc\",\n    storageBucket: \"zero-965cc.appspot.com\",\n    messagingSenderId: \"623766382282\",\n    appId: \"1:623766382282:web:fb11d8377b5b5f311fb633\",\n    measurementId: \"G-55S3TYRBCT\"\n}\n\n//Nashville.gov api Key secret: 1srolkartq8fx54ua1n7glxaswtygatll7y6jxhv9j6083t1oq\n// api key id: 4pcqdx76po3b4zoi8u5h9h22v\n// app token: sR1VjDcjqX0htyE7IlHRT1L43\n// secret token: gMcLB9jmZCB1J9HixroaXxrOhU8fm6P5dTwY","import firebase from 'firebase/app'\nimport { FirebaseConfig } from './../components/fbAuth/FirebaseConfig';\n\n\nconst dataURL = FirebaseConfig.databaseURL;\n\nexport const getResourceCategories = (catId) => {\n    console.log(\"get catId\", catId)\n    return fetch(`${dataURL}/zerodb/resourceCategories.json/?orderBy=\"categoryId\"&equalTo=${catId}`)\n        .then(response => response.json())\n        .then(parsedResponse => {\n            console.log(\"first call\", parsedResponse)\n            const resourceArray = Object.keys(parsedResponse).map(item => {\n                return fetch(`${dataURL}/zerodb/resources.json/?orderBy=\"id\"&equalTo=${parsedResponse[item].resourceId}`)\n                    .then(response => response.json())\n                    .then(parsedResponse => Object.values(Object.entries(parsedResponse))[0][1])\n            })\n            return resourceArray;\n        })\n        .then(requests => {\n            let allPromises = (Promise.all(requests))\n                .then(response => {\n                    response.map(item => {\n                        const newItem = Object.entries(item)\n                        return newItem\n\n                    })\n                    console.log(\"all promises\", response)\n                    return response;\n                })\n            return allPromises\n        })\n\n}\n\nexport const getHowToCategories = (catId) => {\n    console.log(\"get catId\", catId)\n    return fetch(`${dataURL}/zerodb/howToCategories.json/?orderBy=\"categoryId\"&equalTo=${catId}`)\n        .then(response => response.json())\n        .then(parsedResponse => {\n            console.log(\"first call\", parsedResponse)\n            const resourceArray = Object.keys(parsedResponse).map(item => {\n                return fetch(`${dataURL}/zerodb/howTos.json/?orderBy=\"id\"&equalTo=${parsedResponse[item].howToId}`)\n                    .then(response => response.json())\n                    .then(parsedResponse => Object.values(Object.entries(parsedResponse))[0][1])\n            })\n            return resourceArray;\n        })\n        .then(requests => {\n            let allPromises = (Promise.all(requests))\n                .then(response => {\n                    response.map(item => {\n                        const newItem = Object.entries(item)\n                        return newItem\n\n                    })\n                    console.log(\"all promises\", response)\n                    return response;\n                })\n            return allPromises\n        })\n\n}\n\nexport const getFarmersMarkets = () => {\n    return fetch(`${dataURL}/zerodb/farmersMarkets.json/`)\n        .then(response => response.json())\n}\n\nexport const getRecyclingCenters = () => {\n    return fetch(`https://data.nashville.gov/resource/j7nq-7ct5.json`)\n        .then(response => response.json())\n\n}\n\nexport const getTrash = () => {\n    return fetch(`${dataURL}/zerodb/trash.json/?orderBy=\"uid\"&equalTo=\"${firebase.auth().currentUser.uid}\"`)\n        .then(response => response.json())\n\n}\n\n\nexport const addTrash = (trashObj) => {\n    return fetch(`${dataURL}/zerodb/trash.json`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(trashObj)\n    }).then(response => response.json())\n}","export default __webpack_public_path__ + \"static/media/hero1.32906860.jpg\";","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getCategories, getResourceCategories } from '../../modules/APICalls';\nimport taco from \"../images/zeroLogo.png\"\nimport skyline from \"../images/hero1.jpg\"\nimport firebase from 'firebase';\n\nexport const Header = () => {\n\n    return (\n        <>\n            <Container fluid>\n                <Row>\n                    <Col className=\"col-12\">\n\n                        <div className=\"images\">\n                            <img className=\"hero\" src={skyline} height=\"60%\" width=\"100%\" alt=\"Nashville skyline.\" />\n                        </div></Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nimport logo from '../images/zeroLogo.png'\nimport { Header } from './Header';\n\n\n\nexport const Home = () => {\n    return (\n        <>\n            <Header />\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col className=\"col-12 col-md-12 p-4\">\n\n                        <div className=\"headerBorderBox\">\n                            <div className=\"headerBox\">\n                                <center><img className=\"logo mb-3 mt-3\" src={logo} height=\"50%\" width=\"50%\" alt=\"Zero Logo\" /> <h4>The future of Nashville's trash.\n                            </h4>\n                                </center>\n                                {/* <br></br>\n                                <center><h5 className=\"mt-4\">Every year, Metro Public Works collects <strong>228,000 tons</strong> of trash.</h5></center>\n                                {/* <p>This trash ends up in our ever expanding landfills- costing us money, harming our health, and contributing to climate change.</p> */}\n                                {/* <br></br> */}\n                                {/* <center><h5 className=\"mt-4\"><strong>You can make a difference. ZERO is here to help.</strong></h5></center> */}\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center mt-5 mb-5\">\n                    <Col className=\"col-12 col-md-8 border-bottom\">\n                        <center><h5>228,000 tons of trash are collected by Metro Works every year.</h5>\n                            <h5>You can help get that number to ZERO.</h5></center>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col className=\"col-12 col-md-4 mt-5 border-right\">\n                        <h6>Reduce</h6>\n                        <p>The most important step for getting to zero waste.</p>\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Reduce-Learn\"}>Learn How</Button>{' '}\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Reduce-Resources\"}>Find Resources</Button>\n                    </Col>\n                    <Col className=\"col-12 col-md-4 mt-5 pl-5\"><h6>Reuse</h6>\n                        <p>Reuse, repurpose, upcycle- whatever you call it, it's easy and it matters!</p>\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Reuse-Learn\"}>Learn How</Button>{' '}\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Reuse-Resources\"}>Find Resources</Button>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center mt-5 mb-5\">\n                    <Col className=\"col-12 col-md-4 mt-5 border-right\"><h6>Recycle</h6>\n                        <p>Make sure you know what to take and where to take it.</p>\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Recycle-Learn\"}>Learn How</Button>{' '}\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Recycle-Resources\"}>Find Resources</Button></Col>\n                    <Col className=\"col-12 col-md-4 mt-5 pl-5 mb-5\"><h6>Compost</h6>\n                        <p>Food and organic matter make up 60% of our landfills. Make compost instead.</p>\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Compost-Learn\"}>Learn How</Button>{' '}\n                        <Button variant=\"outline-secondary\" onClick={event => window.location.href = \"#/Compost-Resources\"}>Find Resources</Button></Col>\n                </Row>\n\n            </Container>\n        </>\n    )\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport const Login = () => {\n    const history = useHistory();\n    const { login } = useContext(FirebaseContext);\n    const { signInWithGoogle } = useContext(FirebaseContext);\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n\n    const loginSubmit = (e) => {\n        e.preventDefault();\n        login(email, password)\n            .then(() => history.push(\"/\"))\n            .catch(() => alert(\"Invalid email or password\"));\n    };\n\n    const loginGoogle = () => {\n        signInWithGoogle()\n            .then(response => history.push(\"/\"))\n    }\n\n\n    return (\n\n        <>\n            <Container fluid=\"xl\">\n                <Row>\n                    <Col className=\"m-2\" md={6}>\n                        <h5 className=\"username\">Sign in to track your trash.</h5>\n                        <Form onSubmit={loginSubmit} >\n                            <fieldset>\n                                <Form.Group controlId=\"formBasicEmail\" className=\"mb-2\">\n                                    <Form.Control type=\"email\" placeholder=\"Email Address\" onChange={e => setEmail(e.target.value)} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n                                </Form.Group>\n\n                                <Button variant=\"primary\" type=\"submit\">Sign In</Button>\n\n                            </fieldset>\n                        </Form>\n                    </Col>\n\n                    <Col className=\"m-2\">\n                        <h5 className=\"username\">\n                            Need an account?\n        </h5>\n                        <Link to=\"register\" className=\"btn btn-block btn-outline-secondary\">Create one with your email</Link>\n                        <Button block onClick={loginGoogle} variant=\"outline-secondary\">Continue with Google</Button>\n\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container, Col, Row } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport const Register = () => {\n    const history = useHistory();\n    const { register } = useContext(FirebaseContext);\n\n    const [name, setName] = useState();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [confirmPassword, setConfirmPassword] = useState();\n\n    const registerClick = (e) => {\n        e.preventDefault();\n        if (password && password !== confirmPassword) {\n            alert(\"Passwords don't match. Try again.\");\n        } else {\n            const userProfile = { name, email };\n            register(userProfile, password)\n                .then(() => history.push(\"/\"));\n        }\n    };\n\n    return (\n        <>\n            <Container fluid=\"xl\">\n                <Row>\n                    <Col className=\"m-2\" md={6}>\n                        <Form onSubmit={registerClick}>\n                            <h5 className=\"username\">Create Your Account</h5>\n                            <fieldset>\n\n                                <Form.Group>\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control placeholder=\"User Name\" id=\"name\" type=\"text\" onChange={e => setName(e.target.value)} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} />\n                                    <Form.Text className=\"text-muted\">\n                                        We'll never share your email with anyone else.\n                </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"confirmPassword\">\n                                    <Form.Label>Confirm Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Confirm password\" onChange={e => setConfirmPassword(e.target.value)} />\n                                </Form.Group>\n\n                                <Button variant=\"primary\" type=\"submit\">Continue</Button>\n                            </fieldset>\n                        </Form>\n                    </Col>\n\n                    <Col className=\"m-2\">\n                        <h5 className=\"username\">Already have an account?</h5>\n                        <Link to=\"/login\" className=\"btn btn-block btn-outline-success\">Sign in</Link>\n\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap'\n\nexport const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Col className=\"col-4\">\n                <nav>\n                    <ul className=\"pagination\">\n                        {pageNumbers.map(number => (\n                            <li key={number} className=\"page-item\">\n                                <a onClick={() => paginate(number)} className=\"page-link\">\n                                    {number}</a>\n                            </li>\n                        ))}\n                    </ul>\n                </nav>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, Button, Nav, List, ListGroup } from 'react-bootstrap';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nexport const HowToCard = ({ howTo }) => {\n    return (\n        <>\n            <IconContext.Provider value={{ style: { verticalAlign: 'middle' }, color: \"secondary\", className: \"global-class-name\" }}>\n                <Col className=\"col-12 col-md-10 pl-3 mt-3\">\n\n                    <Nav.Link href={howTo.url}><ListGroup.Item action variant=\"secondary\"><FaExternalLinkAlt className=\"pr-1\" /> <p><h6>{howTo.title}</h6></p><p>{howTo.description}</p> </ListGroup.Item></Nav.Link>\n\n\n                    <hr></hr>\n\n                </Col>\n            </IconContext.Provider>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const ReduceLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(0)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-center mt-5 mb-3\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>These articles and videos will get you on the way to less trash.</h3>\n                    </Col>\n                </Row>\n                <ListGroup className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </ListGroup>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const ReuseLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(1)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-center mt-5 mb-3\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>Consider replacing your disposables with reusables.</h3> <p><h3>These videos and articles will help you get started.</h3></p>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const RecycleLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(2)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-center mt-5 mb-3\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>Learn best practices for recycling.</h3><p><h3>These articles and videos will get you on your way.</h3></p>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Row, Col, ListGroup, Nav } from 'react-bootstrap';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nexport const ReduceResourcesCard = ({ resource }) => {\n    return (\n        <>\n\n            <IconContext.Provider value={{ style: { verticalAlign: 'middle' }, color: \"secondary\", className: \"global-class-name\" }}>\n                <Col className=\"col-12 col-md-10 pl-3 mt-3\">\n\n                    <Nav.Link href={resource.url}><ListGroup.Item action variant=\"secondary\"><FaExternalLinkAlt className=\"pr-1\" /> <p><h6>{resource.name}</h6></p>\n                        <p><strong>Description:</strong> {resource.description}</p>\n                        <p><strong>Phone:</strong> {resource.phone}</p>\n                        <p><strong>Website:</strong> {resource.url}</p> </ListGroup.Item></Nav.Link>\n\n\n\n\n                </Col>\n            </IconContext.Provider>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport firebase from \"firebase\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Household = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getResourceCategories(6)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Household/Kitchen/Cleaning</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { Pagination } from './Pagination';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Drink = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getResourceCategories(9)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>For Drinkers</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { Pagination } from './Pagination';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Secondhand = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getResourceCategories(4)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Secondhand Stores</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { Pagination } from './Pagination';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Bulk = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getResourceCategories(8)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Bulk and Unpackaged Food</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Col, Card, ListGroup, Nav } from 'react-bootstrap';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nexport const FarmersMarketsCard = ({ resource }) => {\n    return (\n        <>\n\n            <IconContext.Provider value={{ style: { verticalAlign: 'middle' }, color: \"secondary\", className: \"global-class-name\" }}>\n                <Col className=\"col-12 col-md-10 pl-3 mt-3\">\n\n                    <Nav.Link href={resource.url}><ListGroup.Item action variant=\"secondary\"><FaExternalLinkAlt className=\"pr-1\" /> <p><h6>{resource.name}</h6></p>\n                        <p><strong>Open:</strong> {resource.open}</p>\n                        <p><strong>When:</strong> {resource.when}</p>\n                        <p><strong>Website:</strong> {resource.url}</p> </ListGroup.Item></Nav.Link>\n\n\n\n\n                </Col>\n            </IconContext.Provider>\n\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { getFarmersMarkets } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { FarmersMarketsCard } from './FarmersMarketsCard';\nimport { Pagination } from './Pagination';\n\nexport const FarmersMarkets = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllFarmersMarkets = () => {\n        getFarmersMarkets()\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllFarmersMarkets()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Farmers Markets</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <FarmersMarketsCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { Pagination } from './Pagination';\nimport { ReduceResourcesCard } from './ReduceResourcesCard';\n\nexport const BathPersonal = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getResourceCategories(7)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <Container className=\"mb-3\">\n                <Row>\n                    <Col className=\"col-12\">\n                        <h5>Bath and Personal Care</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard';\nimport { Household } from './HouseHold';\nimport { Drink } from './Drink'\nimport { Secondhand } from './Secondhand'\nimport { Bulk } from './Bulk';\nimport { FarmersMarkets } from './FarmersMarkets'\nimport { BathPersonal } from './BathPersonal';\n\nexport const ReduceResources = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(7)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    return (\n        <>\n            <Container className=\"mb-3\">\n                <Row className=\"justify-content-center mt-5 mb-5\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>These locals can help you reduce on your journey to zero waste.</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <BathPersonal />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <Household />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <Drink />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <Secondhand />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <Bulk />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <FarmersMarkets />\n                </Row>\n                <hr></hr>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard';\nimport { Pagination } from './Pagination';\n\nexport const Divert = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getResourceCategories(10)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Alternatives to the Landfill</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Divert } from './Divert';\n\nexport const ReuseResources = () => {\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-center mt-5 mb-3\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>If you can't reuse something, here are some local options for diverting.</h3></Col>\n                </Row>\n                <Row>\n                    <Divert />\n                </Row>\n                <hr></hr>\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Nav, Col, ListGroup } from 'react-bootstrap';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nexport const NashRecycleCard = ({ resource }) => {\n    return (\n        <>\n\n            <IconContext.Provider value={{ style: { verticalAlign: 'middle' }, color: \"secondary\", className: \"global-class-name\" }}>\n                <Col className=\"col-12 col-md-10 pl-3 mt-3\">\n\n                    <Nav.Link href={resource.website_url_more_information}><ListGroup.Item action variant=\"secondary\"><FaExternalLinkAlt className=\"pr-1\" /> <p><h6>{resource.facility_name}</h6></p>\n                        <p><strong>Address:</strong> {resource.open}</p>\n                        <p><strong>When:</strong> {resource.address}, {resource.city}, {resource.st}, {resource.zip}</p>\n                        <p><strong>Phone:</strong> {resource.phone}</p>\n                        <p><strong>Website:</strong> {resource.website_url_more_information}</p> </ListGroup.Item></Nav.Link>\n\n\n\n\n                </Col>\n            </IconContext.Provider>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { getRecyclingCenters, getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { NashRecycleCard } from './NashRecycleCard';\nimport { Pagination } from './Pagination';\n\n\nexport const NashRecycleCenters = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getRecyclingCenters()\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <Container className=\"mb-3\">\n                <Row>\n                    <Col className=\"col-12\">\n                        <h5>Metro Works Recycling Centers and Drop-off Locations</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <NashRecycleCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <hr></hr>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard';\nimport { NashRecycleCenters } from './NashRecycleCenters';\n\n\nexport const RecycleResources = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(2)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mb-3\">\n                <Row className=\"justify-content-center mt-5 mb-3\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>If you can't reuse it or compost it, recycle it!</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"col-12 pl-4 mt-3\">\n                        <h5>Curbside Glass</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <hr></hr>\n                <Row>\n                    <NashRecycleCenters />\n                </Row>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const CompostLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(3)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-center mt-5 mb-3\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>Food and organic matter make up 60% of landfills.</h3><p><h3>Why not compost instead?</h3></p>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard';\nimport { Pagination } from './Pagination';\n\nexport const CompostResources = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(2)\n\n    const getAllResources = () => {\n        getResourceCategories(3)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = resourceArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center mt-5 mb-3\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h3>Great local resources to help you on your composting journey.</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={resourceArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import { useState } from 'react';\nimport firebase from 'firebase';\nimport { addTrash } from './../../modules/APICalls';\n\nimport { Button } from 'react-bootstrap';\n\nexport const AddTrashButton = ({ getAllTrash }) => {\n\n    const [trashItem, setTrashItem] = useState({});\n\n\n    // const handleInputChange = (event) => {\n    //     const newItemObj = { ...trashItem };\n    //     newItemObj[event.target.id] = event.target.value;\n    //     setTrashItem(newItemObj);\n\n    // }\n\n    const handleAddItem = () => {\n        const newItemObj = { ...trashItem };\n        newItemObj.uid = firebase.auth().currentUser.uid;\n        newItemObj.date = Date.now();\n        addTrash(newItemObj).then(getAllTrash)\n\n    }\n\n\n    return (\n        <>\n            <Button variant=\"secondary\" onClick={handleAddItem}>Add A Bag of Trash</Button>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2'\n\nimport { getTrash } from './../../modules/APICalls'\n\nexport const BarChart = ({ getAllTrash, newTrashArray }) => {\n\n    console.log(\"new trash\", newTrashArray)\n    const allDatesArray = newTrashArray.map((trash) => {\n        return (trash.date)\n    })\n\n    const monthAndYearArray = allDatesArray.map(item => {\n        const currentDate = new Date(item)\n\n\n        const month = currentDate.getMonth()\n        const year = currentDate.getFullYear()\n\n        return (\n            { month, year })\n    })\n    console.log(\"monthYear\", monthAndYearArray)\n\n    let thisYear = new Date().getFullYear()\n\n    const janArray = monthAndYearArray.filter((item) => {\n        return item.month === 0 && item.year === thisYear\n    })\n\n    const febArray = monthAndYearArray.filter((item) => {\n        return item.month === 1 && item.year === thisYear\n    })\n\n    const marArray = monthAndYearArray.filter((item) => {\n        return item.month === 2 && item.year === thisYear\n    })\n\n    const aprArray = monthAndYearArray.filter((item) => {\n        return item.month === 3 && item.year === thisYear\n    })\n\n    const mayArray = monthAndYearArray.filter((item) => {\n        return item.month === 4 && item.year === thisYear\n    })\n\n    const junArray = monthAndYearArray.filter((item) => {\n        return item.month === 5 && item.year === thisYear\n    })\n\n    const julArray = monthAndYearArray.filter((item) => {\n        return item.month === 6 && item.year === thisYear\n    })\n\n    const augArray = monthAndYearArray.filter((item) => {\n        return item.month === 7 && item.year === thisYear\n    })\n\n    const septArray = monthAndYearArray.filter((item) => {\n        return item.month === 8 && item.year === thisYear\n    })\n\n    const octArray = monthAndYearArray.filter((item) => {\n        return item.month === 9 && item.year === thisYear\n    })\n\n    const novArray = monthAndYearArray.filter((item) => {\n        return item.month === 10 && item.year === thisYear\n    })\n\n    const decArray = monthAndYearArray.filter((item) => {\n        return item.month === 11 && item.year === thisYear\n    })\n    let jan = janArray.length\n    let feb = febArray.length\n    let mar = marArray.length\n    let apr = aprArray.length\n    let may = mayArray.length\n    let jun = junArray.length\n    let jul = julArray.length\n    let aug = augArray.length\n    let sept = septArray.length\n    let oct = octArray.length\n    let nov = novArray.length\n    let dec = decArray.length\n\n\n\n    return (\n        <div>\n            <Bar\n                data={{\n                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n                    datasets: [\n                        {\n                            label: 'bags of trash',\n                            data: [`${jan}`, `${feb}`, `${mar}`, `${apr}`, `${may}`, `${jun}`, `${jul}`, `${aug}`, `${sept}`, `${oct}`, `${nov}`, `${dec}`],\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 0.2)',\n                                'rgba(54, 162, 235, 0.2)',\n                                'rgba(255, 206, 86, 0.2)',\n                                'rgba(75, 192, 192, 0.2)',\n                                'rgba(153, 102, 255, 0.2)',\n                                'rgba(255, 159, 64, 0.2)'\n                            ],\n                            borderColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                                'rgba(153, 102, 255, 1)',\n                                'rgba(255, 159, 64, 1)'\n                            ],\n                            borderWidth: 1,\n\n                        }\n                    ]\n                }}\n                height={300}\n                width={400}\n                options={{\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [\n                            {\n                                ticks: { beginAtZero: true }\n                            }\n                        ]\n                    }\n                }}\n            />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { AddTrashButton } from './AddTrashButton';\nimport { BarChart } from './BarChart';\nimport { getTrash } from './../../modules/APICalls';\n\n\nexport const Track = () => {\n\n    const [newTrashArray, setNewTrashArray] = useState([])\n\n    const getAllTrash = () => {\n        getTrash()\n            .then(data => {\n                let newArray = Object.keys(data).map((key) => {\n                    data[key].fbid = key;\n                    return data[key];\n                });\n                setNewTrashArray(newArray)\n\n                console.log(\"dateArray\", newArray)\n            })\n\n    }\n\n    useEffect(() => {\n        getAllTrash()\n    }, [])\n\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h2>Track Your Trash</h2></Col>\n\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Col className=\"col-12 col-md-10\">\n                        <h4>Everytime you take a bag of trash out, add it to your monthly total.</h4>\n                        <p><h4>Watch your progress from month to month!</h4></p>\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col className=\"col-12 col-md-6 mt-4 mb-4\">\n                        <BarChart getAllTrash={getAllTrash} newTrashArray={newTrashArray} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"col-12 col-md-6 mt-4 mb-4\">\n                        <AddTrashButton getAllTrash={getAllTrash} />\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}","import React, { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { FirebaseContext } from './fbAuth/FirebaseProvider';\nimport { Home } from './zero/Home';\nimport { Login } from './fbAuth/Login';\nimport { Register } from './fbAuth/Register';\nimport { NavBar } from './zero/NavBar';\nimport { ReduceLearn } from './zero/ReduceLearn';\nimport { ReuseLearn } from './zero/ReuseLearn';\nimport { RecycleLearn } from './zero/RecycleLearn';\nimport { ReduceResources } from './zero/ReduceResources';\nimport { ReuseResources } from './zero/ReuseResources';\nimport { RecycleResources } from './zero/RecycleResources';\nimport { CompostLearn } from './zero/ComposteLearn';\nimport { CompostResources } from './zero/ComposteResources';\nimport { Track } from './zero/Track';\nimport { BathPersonal } from './zero/BathPersonal';\nimport { Household } from './zero/HouseHold';\nimport { Drink } from './zero/Drink';\nimport { Footer } from './zero/Footer';\n\n\nexport const ApplicationViews = () => {\n    const { isLoggedIn } = useContext(FirebaseContext)\n    return (\n        <>\n\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n\n\n                <Route exact path=\"/Reduce-Learn\">\n\n                    <ReduceLearn />\n                </Route>\n\n                <Route path=\"/Reduce-Resources\">\n\n                    <ReduceResources />\n                </Route>\n\n                <Route path=\"/Reduce-Bath-Personal\">\n\n                    <BathPersonal />\n\n                </Route><Route path=\"/Reduce-Household-Kitchen-Cleaning\">\n\n                    <Household />\n                </Route>\n\n                <Route path=\"/Reduce-For-Drinkers\">\n\n                    <Drink />\n                </Route>\n\n                <Route path=\"/Reuse-Learn\">\n\n                    <ReuseLearn />\n                </Route>\n\n                <Route path=\"/Reuse-Resources\">\n\n                    <ReuseResources />\n                </Route>\n\n                <Route path=\"/Recycle-Learn\">\n\n                    <RecycleLearn />\n                </Route>\n\n                <Route path=\"/Recycle-Resources\">\n\n                    <RecycleResources />\n                </Route>\n\n                <Route path=\"/Compost-Learn\">\n\n                    <CompostLearn />\n                </Route>\n\n                <Route path=\"/Compost-Resources\">\n\n                    <CompostResources />\n                </Route>\n\n\n                <Route path=\"/Track\">\n                    {isLoggedIn ? <Track /> : <Redirect to=\"/login\" />}\n                </Route>\n\n\n                <Route path=\"/login\">\n                    <Login />\n                </Route>\n\n                <Route path=\"/register\">\n                    <Register />\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\n\n","import { Route } from 'react-router-dom';\nimport { NavBar } from './components/zero/NavBar';\nimport { ApplicationViews } from './components/ApplicationViews';\nimport { FirebaseProvider } from './components/fbAuth/FirebaseProvider';\n\nfunction App() {\n  return (\n    <Route>\n      <FirebaseProvider>\n        <NavBar />\n        <ApplicationViews />\n      </FirebaseProvider>\n    </Route>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\"\nimport './styles/zeroCustom.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { FirebaseConfig } from \"./components/fbAuth/FirebaseConfig\";\nimport firebase from \"firebase/app\";\n\n\n\nfirebase.initializeApp(FirebaseConfig);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}