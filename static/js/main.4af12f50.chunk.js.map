{"version":3,"sources":["components/fbAuth/FirebaseProvider.js","components/images/zeroLogo.png","components/zero/NavBar.js","components/fbAuth/FirebaseConfig.js","modules/APICalls.js","components/zero/Header.js","components/zero/BarChart.js","components/zero/Home.js","components/fbAuth/Login.js","components/fbAuth/Register.js","components/zero/Pagination.js","components/zero/HowToCard.js","components/zero/ReduceLearn.js","components/zero/ReuseLearn.js","components/zero/RecycleLearn.js","components/zero/ReduceResourcesCard.js","components/zero/HouseHold.js","components/zero/Drink.js","components/zero/Secondhand.js","components/zero/Bulk.js","components/zero/FarmersMarketsCard.js","components/zero/FarmersMarkets.js","components/zero/ReduceResources.js","components/zero/Divert.js","components/zero/ReuseResources.js","components/zero/NashRecycleCard.js","components/zero/NashRecycleCenters.js","components/zero/RecycleResources.js","components/zero/ComposteLearn.js","components/zero/ComposteResources.js","components/zero/AddTrashButton.js","components/zero/Track.js","components/ApplicationViews.js","App.js","reportWebVitals.js","index.js"],"names":["FirebaseContext","createContext","FirebaseProvider","props","userProfile","sessionStorage","getItem","useState","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","provider","firebase","auth","GoogleAuthProvider","useEffect","onAuthStateChanged","u","Provider","value","login","email","pw","signInWithEmailAndPassword","then","setItem","JSON","stringify","user","logout","signOut","clear","register","password","createUserWithEmailAndPassword","savedUserProfile","console","log","signInWithGoogle","signInWithPopup","children","Spinner","className","NavBar","useContext","Navbar","collapseOnSelect","expand","sticky","Toggle","aria-controls","Brand","href","alt","src","taco","width","height","Collapse","id","Nav","NavDropdown","title","Item","Link","Button","variant","onClick","style","border","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dataURL","getResourceCategories","catId","fetch","response","json","parsedResponse","Object","keys","map","item","resourceId","values","entries","requests","Promise","all","getHowToCategories","howToId","Header","Container","Row","Col","BarChart","newTrashArray","setNewTrashArray","getAllTrash","currentUser","uid","data","newArray","key","fbid","monthAndYearArray","trash","date","currentDate","Date","month","getMonth","year","getFullYear","thisYear","janArray","filter","febArray","marArray","aprArray","mayArray","junArray","julArray","augArray","septArray","octArray","novArray","decArray","jan","length","feb","mar","apr","may","jun","jul","aug","sept","oct","nov","dec","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","Home","Login","history","useHistory","setEmail","setPassword","fluid","md","Form","onSubmit","e","preventDefault","push","catch","alert","Group","controlId","Control","type","placeholder","onChange","target","to","block","Register","name","setName","confirmPassword","setConfirmPassword","Label","Text","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","number","HowToCard","howTo","verticalAlign","color","Card","Title","url","description","ReduceLearn","howToArray","setHowToArray","currentPage","setCurrentPage","index","indexOfLastPost","indexOfFirstPost","currentPosts","slice","CardDeck","pageNumber","ReuseLearn","RecycleLearn","ReduceResourcesCard","resource","bg","Body","phone","Household","resourceArray","setResourceArray","Drink","Secondhand","Bulk","FarmersMarketsCard","open","when","FarmersMarkets","getAllFarmersMarkets","ReduceResources","Divert","ReuseResources","NashRecycleCard","facility_name","address","city","st","zip","website_url_more_information","NashRecycleCenters","getAllResources","RecycleResources","CompostLearn","CompostResources","AddTrashButton","trashItem","trashObj","newItemObj","now","method","headers","body","Track","ApplicationViews","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af12f50.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const FirebaseContext = createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const FirebaseProvider = (props) => {\n    const userProfile = sessionStorage.getItem(\"userProfile\");\n    const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\n\n    const [isFirebaseReady, setIsFirebaseReady] = useState(false);\n\n    const provider = new firebase.auth.GoogleAuthProvider();\n    //https://firebase.google.com/docs/auth/web/start?authuser=0\n\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((u) => {\n            setIsFirebaseReady(true);\n        });\n    }, []);\n\n    //setup other firebase logins\n\n\n    const login = (email, pw) => {\n        return firebase.auth().signInWithEmailAndPassword(email, pw)\n\n            .then((userProfile) => {\n                sessionStorage.setItem(\"userProfile\", JSON.stringify(userProfile.user));\n                setIsLoggedIn(true);\n            });\n    };\n\n    const logout = () => {\n        return firebase.auth().signOut()\n            .then(() => {\n                sessionStorage.clear()\n                setIsLoggedIn(false);\n            });\n    };\n\n    const register = (userProfile, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(userProfile.email, password)\n            .then(savedUserProfile => {\n                console.log('savedU', savedUserProfile)\n                sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n                setIsLoggedIn(true);\n            });\n    };\n\n\n    const signInWithGoogle = () => {\n        return firebase.auth().signInWithPopup(provider)\n            .then(savedUserProfile => {\n                console.log('savedU', savedUserProfile)\n                sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n                setIsLoggedIn(true);\n            })\n    }\n\n\n    /*\n      You return a context provider\n      allow any child elements to access them.\n  */\n\n    return (\n        <FirebaseContext.Provider value={{ isLoggedIn, login, logout, register, signInWithGoogle }}>\n            {isFirebaseReady\n                ? props.children\n                : <Spinner className=\"app-spinner dark\" />}\n        </FirebaseContext.Provider>\n    );\n}","export default __webpack_public_path__ + \"static/media/zeroLogo.733e04bb.png\";","import { React, useState, useContext } from 'react';\nimport { FirebaseContext } from \"../fbAuth/FirebaseProvider\";\nimport { Navbar, Nav, Button, NavDropdown } from 'react-bootstrap';\nimport taco from \"../images/zeroLogo.png\";\nimport { NavLink as RRNavLink } from \"react-router-dom\";\n\nexport const NavBar = () => {\n    const { isLoggedIn, logout } = useContext(FirebaseContext);\n\n\n    return (\n        <Navbar collapseOnSelect expand=\"md navbar-light bg-primary\" sticky=\"top\">\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Brand href=\"#/\"><img\n                alt=\"logo\"\n                src={taco}\n                width=\"50\"\n                height=\"35\"\n                className=\"d-inline-block align-top\"\n            /></Navbar.Brand>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <NavDropdown title=\"REDUCE\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Reduce-Learn\">Tips and Tricks</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Reduce-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"REUSE\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Reuse-Learn\">Learn</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Reuse-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"RECYCLE\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Recycle-Learn\">Learn</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Recycle-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"COMPOST\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#/Compost-Learn\">Learn</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#/Compost-Resources\">Local Resources</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"#/Track\">TRACK YOUR TRASH</Nav.Link>\n                    {isLoggedIn &&\n                        <>\n                            <Button className=\"nav-link text-right\" variant=\"link\" onClick={logout} style={{ border: \"0\" }}>LOGOUT</Button>\n                        </>\n                    }\n                    {!isLoggedIn &&\n                        <>\n                            <Nav.Link href=\"#/login\">LOGIN</Nav.Link>\n                        </>\n                    }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}","export const FirebaseConfig = {\n    apiKey: \"AIzaSyAyHR-TwECoh3QiKcIHtk1qQr4HZDaOsYI\",\n    authDomain: \"zero-965cc.firebaseapp.com\",\n    databaseURL: \"https://zero-965cc-default-rtdb.firebaseio.com\",\n    projectId: \"zero-965cc\",\n    storageBucket: \"zero-965cc.appspot.com\",\n    messagingSenderId: \"623766382282\",\n    appId: \"1:623766382282:web:fb11d8377b5b5f311fb633\",\n    measurementId: \"G-55S3TYRBCT\"\n}\n\n//Nashville.gov api Key secret: 1srolkartq8fx54ua1n7glxaswtygatll7y6jxhv9j6083t1oq\n// api key id: 4pcqdx76po3b4zoi8u5h9h22v\n// app token: sR1VjDcjqX0htyE7IlHRT1L43\n// secret token: gMcLB9jmZCB1J9HixroaXxrOhU8fm6P5dTwY","import firebase from 'firebase/app'\nimport { FirebaseConfig } from './../components/fbAuth/FirebaseConfig';\n\n\nconst dataURL = FirebaseConfig.databaseURL;\n\nexport const getResourceCategories = (catId) => {\n    console.log(\"get catId\", catId)\n    return fetch(`${dataURL}/zerodb/resourceCategories.json/?orderBy=\"categoryId\"&equalTo=${catId}`)\n        .then(response => response.json())\n        .then(parsedResponse => {\n            console.log(\"first call\", parsedResponse)\n            const resourceArray = Object.keys(parsedResponse).map(item => {\n                return fetch(`${dataURL}/zerodb/resources.json/?orderBy=\"id\"&equalTo=${parsedResponse[item].resourceId}`)\n                    .then(response => response.json())\n                    .then(parsedResponse => Object.values(Object.entries(parsedResponse))[0][1])\n            })\n            return resourceArray;\n        })\n        .then(requests => {\n            let allPromises = (Promise.all(requests))\n                .then(response => {\n                    response.map(item => {\n                        const newItem = Object.entries(item)\n                        return newItem\n\n                    })\n                    console.log(\"all promises\", response)\n                    return response;\n                })\n            return allPromises\n        })\n\n}\n\nexport const getHowToCategories = (catId) => {\n    console.log(\"get catId\", catId)\n    return fetch(`${dataURL}/zerodb/howToCategories.json/?orderBy=\"categoryId\"&equalTo=${catId}`)\n        .then(response => response.json())\n        .then(parsedResponse => {\n            console.log(\"first call\", parsedResponse)\n            const resourceArray = Object.keys(parsedResponse).map(item => {\n                return fetch(`${dataURL}/zerodb/howTos.json/?orderBy=\"id\"&equalTo=${parsedResponse[item].howToId}`)\n                    .then(response => response.json())\n                    .then(parsedResponse => Object.values(Object.entries(parsedResponse))[0][1])\n            })\n            return resourceArray;\n        })\n        .then(requests => {\n            let allPromises = (Promise.all(requests))\n                .then(response => {\n                    response.map(item => {\n                        const newItem = Object.entries(item)\n                        return newItem\n\n                    })\n                    console.log(\"all promises\", response)\n                    return response;\n                })\n            return allPromises\n        })\n\n}\n\nexport const getFarmersMarkets = () => {\n    return fetch(`${dataURL}/zerodb/farmersMarkets.json/`)\n        .then(response => response.json())\n}\n\nexport const getRecyclingCenters = () => {\n    return fetch(`https://data.nashville.gov/resource/j7nq-7ct5.json`)\n        .then(response => response.json())\n\n}\n\nexport const getTrash = () => {\n    return fetch(`${dataURL}/zerodb/trash.json/?orderBy=\"uid\"&equalTo=\"${firebase.auth().currentUser.uid}\"`)\n        .then(response => response.json())\n\n}\n\n\nexport const addTrash = (trashObj) => {\n    return fetch(`${dataURL}/zerodb/trash.json`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(trashObj)\n    }).then(response => response.json())\n}","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getCategories, getResourceCategories } from '../../modules/APICalls';\nimport taco from \"../images/zeroLogo.png\"\nimport firebase from 'firebase';\n\nexport const Header = () => {\n\n    return (\n        <>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col className=\"col-12\">\n\n                        <div className=\"images\">\n                            <center><img className=\"logo\" src={taco} height=\"50%\" width=\"50%\" alt=\"logo\" /></center>\n\n                        </div></Col>\n                    <h5 className=\"mt-3 p-2\">The future of Nashville's trash.</h5>\n                </Row>\n            </Container>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2'\n\nimport { getTrash } from './../../modules/APICalls'\n\nexport const BarChart = () => {\n\n    const [newTrashArray, setNewTrashArray] = useState([])\n\n    const getAllTrash = () => {\n        getTrash()\n            .then(data => {\n                let newArray = Object.keys(data).map((key) => {\n                    data[key].fbid = key;\n                    return data[key];\n                });\n                setNewTrashArray(newArray)\n\n                console.log(\"dateArray\", newArray)\n            })\n\n    }\n\n    useEffect(() => {\n        getAllTrash()\n    }, [])\n\n    const allDatesArray = newTrashArray.map((trash) => {\n        return (trash.date)\n    })\n\n    const monthAndYearArray = allDatesArray.map(item => {\n        const currentDate = new Date(item)\n\n\n        const month = currentDate.getMonth()\n        const year = currentDate.getFullYear()\n\n        return (\n            { month, year })\n    })\n    console.log(\"monthYear\", monthAndYearArray)\n\n    let thisYear = new Date().getFullYear()\n\n    const janArray = monthAndYearArray.filter((item) => {\n        return item.month === 0 && item.year === thisYear\n    })\n\n    const febArray = monthAndYearArray.filter((item) => {\n        return item.month === 1 && item.year === thisYear\n    })\n\n    const marArray = monthAndYearArray.filter((item) => {\n        return item.month === 2 && item.year === thisYear\n    })\n\n    const aprArray = monthAndYearArray.filter((item) => {\n        return item.month === 3 && item.year === thisYear\n    })\n\n    const mayArray = monthAndYearArray.filter((item) => {\n        return item.month === 4 && item.year === thisYear\n    })\n\n    const junArray = monthAndYearArray.filter((item) => {\n        return item.month === 5 && item.year === thisYear\n    })\n\n    const julArray = monthAndYearArray.filter((item) => {\n        return item.month === 6 && item.year === thisYear\n    })\n\n    const augArray = monthAndYearArray.filter((item) => {\n        return item.month === 7 && item.year === thisYear\n    })\n\n    const septArray = monthAndYearArray.filter((item) => {\n        return item.month === 8 && item.year === thisYear\n    })\n\n    const octArray = monthAndYearArray.filter((item) => {\n        return item.month === 9 && item.year === thisYear\n    })\n\n    const novArray = monthAndYearArray.filter((item) => {\n        return item.month === 10 && item.year === thisYear\n    })\n\n    const decArray = monthAndYearArray.filter((item) => {\n        return item.month === 11 && item.year === thisYear\n    })\n    let jan = janArray.length\n    let feb = febArray.length\n    let mar = marArray.length\n    let apr = aprArray.length\n    let may = mayArray.length\n    let jun = junArray.length\n    let jul = julArray.length\n    let aug = augArray.length\n    let sept = septArray.length\n    let oct = octArray.length\n    let nov = novArray.length\n    let dec = decArray.length\n\n\n\n    return (\n        <div>\n            <Bar\n                data={{\n                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n                    datasets: [\n                        {\n                            label: 'bags of trash',\n                            data: [`${jan}`, `${feb}`, `${mar}`, `${apr}`, `${may}`, `${jun}`, `${jul}`, `${aug}`, `${sept}`, `${oct}`, `${nov}`, `${dec}`],\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 0.2)',\n                                'rgba(54, 162, 235, 0.2)',\n                                'rgba(255, 206, 86, 0.2)',\n                                'rgba(75, 192, 192, 0.2)',\n                                'rgba(153, 102, 255, 0.2)',\n                                'rgba(255, 159, 64, 0.2)'\n                            ],\n                            borderColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                                'rgba(153, 102, 255, 1)',\n                                'rgba(255, 159, 64, 1)'\n                            ],\n                            borderWidth: 1,\n\n                        }\n                    ]\n                }}\n                height={300}\n                width={400}\n                options={{\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [\n                            {\n                                ticks: { beginAtZero: true }\n                            }\n                        ]\n                    }\n                }}\n            />\n        </div>\n    )\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { Header } from './Header';\nimport { BarChart } from './BarChart'\n\n\nexport const Home = () => {\n    return (\n        <>\n            <Header />\n            <Container>\n                <Row>\n                    <Col>\n                        <p>Every year, Metro Public Works collects <strong>228,000 tons</strong> of trash.</p>\n                        <p>This trash ends up in our ever expanding landfills- costing us money, harming our health, and contributing to climate change.</p>\n                        <p>The good news is YOU can make a difference.</p>\n                        <p>ZERO is here to help.</p>\n                    </Col>\n                </Row>\n\n            </Container>\n        </>\n    )\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport const Login = () => {\n    const history = useHistory();\n    const { login } = useContext(FirebaseContext);\n    const { signInWithGoogle } = useContext(FirebaseContext);\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n\n    const loginSubmit = (e) => {\n        e.preventDefault();\n        login(email, password)\n            .then(() => history.push(\"/\"))\n            .catch(() => alert(\"Invalid email or password\"));\n    };\n\n    const loginGoogle = () => {\n        signInWithGoogle()\n            .then(response => history.push(\"/\"))\n    }\n\n\n    return (\n\n        <>\n            <Container fluid=\"xl\">\n                <Row>\n                    <Col className=\"m-2\" md={6}>\n                        <h5 className=\"username\">Sign in to track your trash.</h5>\n                        <Form onSubmit={loginSubmit} >\n                            <fieldset>\n                                <Form.Group controlId=\"formBasicEmail\" className=\"mb-2\">\n                                    <Form.Control type=\"email\" placeholder=\"Email Address\" onChange={e => setEmail(e.target.value)} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n                                </Form.Group>\n\n                                <Button variant=\"primary\" type=\"submit\">Sign In</Button>\n\n                            </fieldset>\n                        </Form>\n                    </Col>\n\n                    <Col className=\"m-2\">\n                        <h5 className=\"username\">\n                            Need an account?\n        </h5>\n                        <Link to=\"register\" className=\"btn btn-block btn-outline-secondary\">Create one with your email</Link>\n                        <Button block onClick={loginGoogle} variant=\"outline-secondary\">Continue with Google</Button>\n\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container, Col, Row } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport const Register = () => {\n    const history = useHistory();\n    const { register } = useContext(FirebaseContext);\n\n    const [name, setName] = useState();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [confirmPassword, setConfirmPassword] = useState();\n\n    const registerClick = (e) => {\n        e.preventDefault();\n        if (password && password !== confirmPassword) {\n            alert(\"Passwords don't match. Try again.\");\n        } else {\n            const userProfile = { name, email };\n            register(userProfile, password)\n                .then(() => history.push(\"/\"));\n        }\n    };\n\n    return (\n        <>\n            <Container fluid=\"xl\">\n                <Row>\n                    <Col className=\"m-2\" md={6}>\n                        <Form onSubmit={registerClick}>\n                            <h5 className=\"username\">Create Your Account</h5>\n                            <fieldset>\n\n                                <Form.Group>\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control placeholder=\"User Name\" id=\"name\" type=\"text\" onChange={e => setName(e.target.value)} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"email\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} />\n                                    <Form.Text className=\"text-muted\">\n                                        We'll never share your email with anyone else.\n                </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"confirmPassword\">\n                                    <Form.Label>Confirm Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Confirm password\" onChange={e => setConfirmPassword(e.target.value)} />\n                                </Form.Group>\n\n                                <Button variant=\"primary\" type=\"submit\">Continue</Button>\n                            </fieldset>\n                        </Form>\n                    </Col>\n\n                    <Col className=\"m-2\">\n                        <h5 className=\"username\">Already have an account?</h5>\n                        <Link to=\"/login\" className=\"btn btn-block btn-outline-success\">Sign in</Link>\n\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}","import React from 'react';\n\nexport const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pageNumbers.map(number => (\n                    <li key={number} className=\"page-item\">\n                        <a onClick={() => paginate(number)} className=\"page-link\">\n                            {number}</a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, Button, Nav } from 'react-bootstrap';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nexport const HowToCard = ({ howTo }) => {\n    return (\n        <>\n            <IconContext.Provider value={{ style: { verticalAlign: 'middle' }, color: \"secondary\", className: \"global-class-name\" }}>\n                <Col className=\"col-12 col-md-10 pl-3 mt-3\">\n\n                    <Card.Title ><FaExternalLinkAlt className=\"pr-1\" /> <Nav.Link href={howTo.url}>{howTo.title}</Nav.Link> </Card.Title>\n                    <Card.Text>\n                        {howTo.description}\n                    </Card.Text>\n\n                    <hr></hr>\n\n                </Col>\n            </IconContext.Provider>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const ReduceLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(0)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col className=\"col-12\">\n                        <h3>How To Reduce</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const ReuseLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(1)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col className=\"col-12\">\n                        <h3>How To Reuse</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const RecycleLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(2)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col className=\"col-12\">\n                        <h3>How To Recycle</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\n\nexport const ReduceResourcesCard = ({ resource }) => {\n    return (\n        <>\n\n            <Col className=\"col-4 mt-5\">\n                <Card className=\"h-100\" style={{ width: '18rem' }} bg=\"primary\">\n                    <Card.Body>\n                        <Card.Title >{resource.name}</Card.Title>\n                        <Card.Text>\n                            {resource.description}\n                        </Card.Text>\n                        <Card.Text>\n                            <strong>Phone: </strong>{resource.phone}\n                        </Card.Text>\n                        <Card.Link href={resource.url}>Website</Card.Link>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport firebase from \"firebase\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Household = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(6)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Household/Kitchen/Cleaning</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Drink = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(9)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>For Drinkers</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Secondhand = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(4)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Secondhand Stores</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Bulk = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(8)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Bulk and Unpackaged Food</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\n\nexport const FarmersMarketsCard = ({ resource }) => {\n    return (\n        <>\n\n            <Col className=\"col-4 mt-5\">\n                <Card className=\"h-100\" style={{ width: '18rem' }} bg=\"primary\">\n                    <Card.Body>\n                        <Card.Title >{resource.name}</Card.Title>\n                        <Card.Text>\n                            <strong>Open: </strong> {resource.open}\n                        </Card.Text>\n                        <Card.Text>\n                            <strong>When: </strong>{resource.when}\n                        </Card.Text>\n                        <Card.Link href={resource.url}>Website</Card.Link>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getFarmersMarkets } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { FarmersMarketsCard } from './FarmersMarketsCard'\n\nexport const FarmersMarkets = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllFarmersMarkets = () => {\n        getFarmersMarkets()\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllFarmersMarkets()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Farmers Markets</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <FarmersMarketsCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard';\nimport { Household } from './HouseHold';\nimport { Drink } from './Drink'\nimport { Secondhand } from './Secondhand'\nimport { Bulk } from './Bulk';\nimport { FarmersMarkets } from './FarmersMarkets'\n\nexport const ReduceResources = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(7)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n    return (\n        <>\n            <Container className=\"mb-3\">\n                <Row>\n                    <Col className=\"col-12\">\n                        <h3>Bath and Personal Care</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <hr></hr>\n                <Row>\n                    <Household />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <Drink />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <Secondhand />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <Bulk />\n                </Row>\n                <hr></hr>\n                <Row>\n                    <FarmersMarkets />\n                </Row>\n                <hr></hr>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const Divert = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(10)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Alternatives to the Landfill</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Divert } from './Divert';\n\nexport const ReuseResources = () => {\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <h2>Info about reusing goes here.</h2></Col>\n                </Row>\n                <Row>\n                    <Divert />\n                </Row>\n                <hr></hr>\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\n\nexport const NashRecycleCard = ({ resource }) => {\n    return (\n        <>\n\n            <Col className=\"col-4 mt-5\">\n                <Card className=\"h-100\" style={{ width: '18rem' }} bg=\"primary\">\n                    <Card.Body>\n                        <Card.Title >{resource.facility_name}</Card.Title>\n                        <Card.Text>\n                            {resource.address}, {resource.city}, {resource.st}, {resource.zip}\n                        </Card.Text>\n                        <Card.Text>\n                            <strong>Phone: </strong>{resource.phone}\n                        </Card.Text>\n                        <Card.Link href={resource.website_url_more_information}>Website</Card.Link>\n                    </Card.Body>\n                </Card>\n            </Col>\n\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getRecyclingCenters, getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { NashRecycleCard } from './NashRecycleCard';;\n\n\nexport const NashRecycleCenters = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getRecyclingCenters()\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mb-3\">\n                <Row>\n                    <Col className=\"col-12\">\n                        <h3>Metro Works Recycling Centers and Drop-off Locations</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <NashRecycleCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <hr></hr>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard';\nimport { NashRecycleCenters } from './NashRecycleCenters';\n\n\nexport const RecycleResources = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(2)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mb-3\">\n                <Row>\n                    <Col className=\"col-12\">\n                        <h3>Recycle Resources</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n                <hr></hr>\n                <Row>\n                    <NashRecycleCenters />\n                </Row>\n\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getHowToCategories } from \"./../../modules/APICalls\";\nimport { Pagination } from './Pagination';\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { HowToCard } from './HowToCard';\n\n\nexport const CompostLearn = () => {\n\n    const [howToArray, setHowToArray] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage] = useState(3)\n\n    const getAllHowTos = () => {\n        getHowToCategories(3)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setHowToArray(newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllHowTos()\n    }, [])\n\n    //get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = howToArray.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber =>\n        setCurrentPage(pageNumber);\n\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col className=\"col-12\">\n                        <h3>How To Compost</h3>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {currentPosts.map(howTo => {\n                        return <HowToCard howTo={howTo} key={howTo.id} />\n                    })}\n                </CardDeck>\n                <Pagination postsPerPage={postsPerPage} totalPosts={howToArray.length} paginate={paginate} />\n            </Container>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { getResourceCategories } from \"./../../modules/APICalls\";\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap';\nimport { ReduceResourcesCard } from './ReduceResourcesCard'\n\nexport const CompostResources = () => {\n\n    const [resourceArray, setResourceArray] = useState([])\n\n    const getAllResources = () => {\n        getResourceCategories(3)\n            .then(data => {\n                let newArray = Object.keys(data).map((key, index) => {\n                    data[key].id = key;\n                    return data[key];\n                });\n                setResourceArray(newArray)\n                console.log(\"resource array\", newArray)\n            })\n\n\n    }\n\n\n    useEffect(() => {\n        getAllResources()\n    }, [])\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row>\n                    <Col className=\"col-12 pl-4\">\n                        <h5>Local Compost Resources</h5>\n                    </Col>\n                </Row>\n                <CardDeck className=\"mt-2\">\n                    {resourceArray.map(resource => {\n                        return <ReduceResourcesCard resource={resource} key={resource.id} />\n                    })}\n                </CardDeck>\n\n            </Container>\n        </>\n    )\n}","import { useState } from 'react';\nimport firebase from 'firebase';\nimport { addTrash } from './../../modules/APICalls';\n\nimport { Button } from 'react-bootstrap';\n\nexport const AddTrashButton = () => {\n\n    const [trashItem, setTrashItem] = useState({});\n\n\n    // const handleInputChange = (event) => {\n    //     const newItemObj = { ...trashItem };\n    //     newItemObj[event.target.id] = event.target.value;\n    //     setTrashItem(newItemObj);\n\n    // }\n\n    const handleAddItem = () => {\n        const newItemObj = { ...trashItem };\n        newItemObj.uid = firebase.auth().currentUser.uid;\n        newItemObj.date = Date.now();\n        addTrash(newItemObj)\n\n    }\n\n\n    return (\n        <>\n            <Button onClick={handleAddItem}>Add A Bag of Trash</Button>\n        </>\n    )\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { AddTrashButton } from './AddTrashButton';\nimport { BarChart } from './BarChart'\n\nexport const Track = () => {\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <h2>This is Track Your Trash.</h2></Col>\n\n                </Row>\n                <Row>\n                    <Col className=\"col-12 col-md-6 mt-4 mb-4\">\n                        <BarChart />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"col-12 col-md-6 mt-4 mb-4\">\n                        <AddTrashButton />\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}","import React, { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { FirebaseContext } from './fbAuth/FirebaseProvider';\nimport { Home } from './zero/Home';\nimport { Login } from './fbAuth/Login';\nimport { Register } from './fbAuth/Register';\nimport { NavBar } from './zero/NavBar';\nimport { ReduceLearn } from './zero/ReduceLearn';\nimport { ReuseLearn } from './zero/ReuseLearn';\nimport { RecycleLearn } from './zero/RecycleLearn';\nimport { ReduceResources } from './zero/ReduceResources';\nimport { ReuseResources } from './zero/ReuseResources';\nimport { RecycleResources } from './zero/RecycleResources';\nimport { CompostLearn } from './zero/ComposteLearn';\nimport { CompostResources } from './zero/ComposteResources';\nimport { Track } from './zero/Track';\nimport { Footer } from './zero/Footer';\n\nexport const ApplicationViews = () => {\n    const { isLoggedIn } = useContext(FirebaseContext)\n    return (\n        <>\n\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n\n\n                <Route exact path=\"/Reduce-Learn\">\n\n                    <ReduceLearn />\n                </Route>\n\n                <Route path=\"/Reduce-Resources\">\n\n                    <ReduceResources />\n                </Route>\n\n                <Route path=\"/Reuse-Learn\">\n\n                    <ReuseLearn />\n                </Route>\n\n                <Route path=\"/Reuse-Resources\">\n\n                    <ReuseResources />\n                </Route>\n\n                <Route path=\"/Recycle-Learn\">\n\n                    <RecycleLearn />\n                </Route>\n\n                <Route path=\"/Recycle-Resources\">\n\n                    <RecycleResources />\n                </Route>\n\n                <Route path=\"/Compost-Learn\">\n\n                    <CompostLearn />\n                </Route>\n\n                <Route path=\"/Compost-Resources\">\n\n                    <CompostResources />\n                </Route>\n\n\n                <Route path=\"/Track\">\n                    {isLoggedIn ? <Track /> : <Redirect to=\"/login\" />}\n                </Route>\n\n\n                <Route path=\"/login\">\n                    <Login />\n                </Route>\n\n                <Route path=\"/register\">\n                    <Register />\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\n\n","import { Route } from 'react-router-dom';\nimport { NavBar } from './components/zero/NavBar';\nimport { ApplicationViews } from './components/ApplicationViews';\nimport { FirebaseProvider } from './components/fbAuth/FirebaseProvider';\n\nfunction App() {\n  return (\n    <Route>\n      <FirebaseProvider>\n        <NavBar />\n        <ApplicationViews />\n      </FirebaseProvider>\n    </Route>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\"\nimport './styles/zeroCustom.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { FirebaseConfig } from \"./components/fbAuth/FirebaseConfig\";\nimport firebase from \"firebase/app\";\n\n\n\nfirebase.initializeApp(FirebaseConfig);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}